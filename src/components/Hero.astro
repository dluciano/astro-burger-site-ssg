---
import BurgerImage from "../../public/images/burger.png";
---

<section class="mb-[20px] w-full max-w-[1340px]">
  <h1
    class="text-accent2 text-[108px] max-w-[1255px] text-center leading-[88.9%] tracking-[-0.02em] uppercase"
    id="hero-title"
  >
    NEW YORK'S FAVORITE ORGANIC HAMBURGER JOINT
  </h1>
  <img
    src={BurgerImage.src}
    width={BurgerImage.width}
    height={BurgerImage.height}
    class="w-full mt-[-33px]"
    id="till-burger-image"
  />
</section>
<script>
  import VanillaTilt from "vanilla-tilt";

  const element = document.querySelector<HTMLElement>("#till-burger-image");
  if (element) {
    const timer = setTimeout(() => {
      element.style.filter = "opacity(1)";
      element.style.animationFillMode = "revert";
      VanillaTilt.init(element, {
        reverse: false, // reverse the tilt direction
        max: 3, // max tilt rotation (degrees)
        startX: 0, // the starting tilt on the X axis, in degrees.
        startY: 0, // the starting tilt on the Y axis, in degrees.
        perspective: 1000, // Transform perspective, the lower the more extreme the tilt gets.
        scale: 1, // 2 = 200%, 1.5 = 150%, etc..
        speed: 10, // Speed of the enter/exit transition
        transition: true, // Set a transition on enter/exit.
        axis: null, // What axis should be enabled. Can be "x" or "y".
        reset: true, // If the tilt effect has to be reset on exit.
        "reset-to-start": true, // Whether the exit reset will go to [0,0] (default) or [startX, startY]
        easing: "cubic-bezier(.03,.98,.52,.99)", // Easing on enter/exit.
        glare: false, // if it should have a "glare" effect
        "max-glare": 1, // the maximum "glare" opacity (1 = 100%, 0.5 = 50%)
        "glare-prerender": false, // false = VanillaTilt creates the glare elements for you, otherwise
        // you need to add .js-tilt-glare>.js-tilt-glare-inner by yourself
        "mouse-event-element": undefined, // css-selector or link to an HTML-element that will be listening to mouse events
        "full-page-listening": false, // If true, parallax effect will listen to mouse move events on the whole document, not only the selected element
        gyroscope: true, // Boolean to enable/disable device orientation detection,
        gyroscopeMinAngleX: -45, // This is the bottom limit of the device angle on X axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the left border of the element;
        gyroscopeMaxAngleX: 45, // This is the top limit of the device angle on X axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the right border of the element;
        gyroscopeMinAngleY: -45, // This is the bottom limit of the device angle on Y axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the top border of the element;
        gyroscopeMaxAngleY: 45, // This is the top limit of the device angle on Y axis, meaning that a device rotated at this angle would tilt the element as if the mouse was on the bottom border of the element;
        gyroscopeSamples: 5, // How many gyroscope moves to decide the starting position.
      });
      clearTimeout(timer);
    }, 1000);
  }
</script>
<style>
  @media (prefers-reduced-motion: no-preference) {
    #hero-title {
      animation-duration: 0.3s;
      animation-name: slidein;
    }
    #till-burger-image {
      filter: opacity(0);
      animation-duration: 0.5s;
      animation-name: slidein;
      animation-delay: 0.3s;
      animation-fill-mode: forwards;
    }

    @keyframes slidein {
      from {
        transform: translateY(100px);
        filter: opacity(0);
      }

      to {
        transform: translateY(0);
        filter: opacity(1);
      }
    }
  }
</style>
